version: '3.8'

x-api-environment:
  environment: &environment_variables
    - DJANGO_SECRET_KEY=s27v36fgker783d7w9kg
    - DJANGO_SETTINGS_MODULE=api.config
    - DJANGO_CONFIGURATION=Local
    - DATABASE_URL=postgresql://postgres:changeme@postgres:5432/payment_wallet_api
    - REDIS_URL=redis://redis/0
    - LINKPAY_REDIRECT_URI=http://localhost:8080/return
    - LINKPAY_USER_INTERACTION_URI=http://localhost:8080/return
    - FIELD_ENCRYPTION_KEY=963bf31df7fc9eb73c1456095bd3c9c2220042546a4ce4ad6d8acf319e081b3c
    - STITCH_CLIENT_ID
    - STITCH_CLIENT_SECRET
    - STITCH_BENEFICIARY_BANK_ID=absa
    - STITCH_BENEFICIARY_ACCOUNT_NAME='Sample Account'
    - STITCH_BENEFICIARY_ACCOUNT_NUMBER=1234567890
    - STITCH_BENEFICIARY_ACCOUNT_TYPE=current
    - STITCH_BENEFICIARY_TYPE=private
    - SENTRY_DSN
    - DJANGO_DEBUG
  build: &build_settings
    context: ./
    dockerfile: Dockerfile
  volumes: &volume_values
    - './:/code'
  depends_on: &depends_containers
    - postgres
    - redis
  links: &links_containers
    - postgres
    - redis

services:
  postgres:
    image: 'postgres:14.4-alpine'
    restart: on-failure
    environment:
      POSTGRES_USER: '${POSTGRES_USER:-postgres}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD:-changeme}'
      POSTGRES_DB: '${POSTGRES_DB:-payment_wallet_api}'
      PGDATA: /data/postgres
    volumes:
      - 'postgres:/data/postgres'
    ports:
      - '5433:5432'
  api:
    restart: on-failure
    environment: *environment_variables
    build: *build_settings
    volumes: *volume_values
    depends_on: *depends_containers
    links: *links_containers
    command: docker/scripts/run_api.sh
    expose:
      - 8081
  redis:
    image: redis:4-alpine
    restart: always
    volumes:
      - 'redis:/data'
    ports:
      - '6380:6379'
  nginx:
    restart: always
    image: nginx:1.23-alpine
    ports:
      - '8081:80'
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_files:/code/static
  worker:
    build: *build_settings
    environment: *environment_variables
    command: celery -A api worker --loglevel=info --concurrency 1 -E
    depends_on:
      - api
      - postgres
      - redis
    restart: on-failure
volumes:
  postgres:
  redis:
  static_files:
